<canvas id="map" width="1080" height="700"></canvas>
<% content_for :head do %>
  <script>
    var canvas;
    var context;
    var bg;
    var warband;
    var mapWidth;
    var mapHeight;
    var mapItems = new Array();

    // Do when document is ready
    $(document).ready( function() {

      // Register a click handler on the canvas (#map)
      $("#map").live("click", function(e) {
        // Get the clicked position
        var pos = getCursorPosition(e);

        // Update the Warband position (database) by sending a PUT request and
        // then the positon of the warband (javascript object) upon success
        var url = "<%= warband_path(@warband) %>"; // Use warbands#show
        var data = { "warband[pos_x]": pos.x,
                     "warband[pos_y]": pos.y,
                     "_method": "put" }; // Use warbands#update (not edit)
        $.post(url, data, updateWarbandPosition, "json");

        return false;
      });
  
      // Get the canvas
      canvas = $("#map")[0];
  
      // Try to get the context
      if(canvas.getContext) {
        context = canvas.getContext('2d');
  
        // Create a background object
        bg = new Object();
        bg.img = new Image();
        bg.img.src = 'images/map_bg.png';
        bg.x = 0;
        bg.y = 0;
        bg.img.onload = function() {
          redraw();
        };

        // Create a Warband object
        warband = new Object();
        warband.img = new Image();
        warband.img.src = 'images/huskarl.png';
        warband.img.onload = function() {
          redraw();
        };
        // Get the initial position of the Warband
        warband.x = <%= @warband.pos_x %>;
        warband.y = <%= @warband.pos_y %>;

        // Add all the objects to be drawn
        mapItems.push(bg);
        mapItems.push(warband)

      } else { // No context available
        alert("Sorry, but the Canvas element is not supported by your browser!");
      }
    });

    // Update the Warband position from the specified data (.json) and redraw
    function updateWarbandPosition(data) {
      warband.x = data['warband']['pos_x'];
      warband.y = data['warband']['pos_y'];
      redraw();
    }
  
    // Redraw all the images (mapItems) of the canvas context
    function redraw() {
      // Clear the canvas
      clearCanvas();
      // Draw all images (from mapItems array)
      for (var obj in mapItems) {
        context.drawImage(mapItems[obj].img, mapItems[obj].x, mapItems[obj].y);
      }
    }

    // Get the cursor position (pos.x and pos.y) from the specified event e
    function getCursorPosition(e) {
      var x;
      var y;
      if (e.pageX != undefined && e.pageY != undefined) {
        x = e.pageX;
        y = e.pageY;
      } else {
        x = 0;
        y = 0;
      }
  
      x -= canvas.offsetLeft;
      y -= canvas.offsetTop;
  
      //x = Math.floor(x/80)*80+29;
      //y = Math.floor(y/80)*80+24;
  
      var pos = new Object();
      pos.x = x;
      pos.y = y;
      return pos;
    }
  
    // Clear the canvas
    function clearCanvas() {
      context.clearRect(0, 0, canvas.width, canvas.height);
      var w = canvas.width;
      canvas.width = 1;
      canvas.width = w;
    }
  </script>
<% end %>
